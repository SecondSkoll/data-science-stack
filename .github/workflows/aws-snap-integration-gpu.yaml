name: GPU snap integration CI

on:
  workflow_run:
    workflows:
      - Build and test Snap
    types:
      - completed

env:
  SNAP_ARTIFACT_NAME: dss-snap
  SNAP_FILE: dss.snap
  KUBECONFIG: ~/.dss/config

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2.3.3
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ${{ vars.AWS_EC2_IMAGE_ID }}
          ec2-instance-type: ${{ vars.AWS_EC2_INSTANCE_TYPE }}
          subnet-id: ${{ vars.AWS_DEFAULT_SUBNET_ID }}
          security-group-id: ${{ vars.AWS_SECURITY_GROUP_ID }}
  
  integration-tests:
    name: Run integration tests
    needs: [start-runner]
    runs-on: ${{ needs.start-runner.outputs.label }} 
    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - name: Download artifact
      id: download-artifact
      uses: dawidd6/action-download-artifact@v3
      with:
        run_id: ${{ github.event.workflow_run.id }}
        name: ${{ env.SNAP_ARTIFACT_NAME }}

    - name: Install the snap locally
      # use --dangerous so we trust the snap even though it doesn't have signatures
      run: |
        sudo snap install ${{ env.SNAP_FILE }} --dangerous
        sudo snap connect data-science-stack:dot-dss-config

    - name: Set up Microk8s
      uses: balchua/microk8s-actions@v0.3.2
      with:
        channel: '1.28/stable'
        addons: '["hostpath-storage"]'

    - name: Export kubeconfig where strict snap can access it
      run: |
        mkdir -p ~/.dss
        cp ~/.kube/config ${{ env.KUBECONFIG }}

    - name: Test dss snap
      run: |
        data-science-stack.dss initialize --kubeconfig ${{ env.KUBECONFIG }}
        data-science-stack.dss create x --image kubeflownotebookswg/jupyter-scipy:v1.8.0 --kubeconfig ${{ env.KUBECONFIG }}
        # do gpu things somehow?

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner 
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2.3.3
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}